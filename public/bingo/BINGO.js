//variables en global scope

let numbersCard = [];
let numbersCard2 = [[], [], []];
let randomNumber;
let bomboPassedNumbers = [];
let counter = 0;
let userName;
let lineAlert = false;
let bingoAlert = false;

const gameRules = ` Here are the rules of Skylab Bingo: \nYou will start with 500 points and a card with 15 random numbers will be generated. 

\nThe drum contains 90 numbers.

\nEach turn, that is, each time a random number is generated from the drum , will subtract 5 points from your final score.

\nEach time one of the numbers generated by the drum matches the numbers in your card, an X will be marked on that number. When you get all the numbers in a row it will count as "LINE".

\nThe game ends when you get all the numbers in your card and it will count as "BINGO".

\nGOOD LUCK!!!!!`;

const SaveUserName = () => {
  userName = "";
  do {
    userName = prompt("Welcome to SKYLAB bingo, please introduce your name. ");
    if (userName !== null && userName !== "" && isNaN(userName)) {
      alert(`Â¡Welcome ${userName}! Thanks for choose our game.`);
    } else {
      alert(" Use a valid name. You can't use only numbers.  ");
    }
  } while (userName === null || userName === "" || !isNaN(userName));
  console.log(gameRules);
};

const showRandomNumber = () => {
  return Math.ceil(Math.random() * 25) + 1;
};

const randomNumbersCard = () => {
  numbersCard2 = [[], [], []];
  do {
    randomNumber = showRandomNumber();
    if (!numbersCard.includes(randomNumber)) {
      numbersCard.push(randomNumber);
    }
  } while (numbersCard.length !== 15);

  for (let i = 0; i < 3; i++) {
    for (let j = 0; j < 5; j++) {
      numbersCard2[i].push(numbersCard[j]);
    }
    numbersCard.splice(0, 5);
  }
  console.log("This is your numbers card: ");
  console.table(numbersCard2);
};

// funcion para pedir si quiere otro carton
const askForNewNumbersCard = () => {
  let question;
  do {
    question = confirm(
      "Do you want another numbers card or continue with this? \n (Press cancel for continue with this or Accept for generate another one)"
    );
    if (question === true) {
      randomNumbersCard();
    }
  } while (question !== false);
};

const askForContinue = () => {
  if (bingoAlert === false) {
    let questionForContinue = confirm("Do you want to continue playing?");
    if (questionForContinue === true) {
      numberBombo();
    } else {
      alert(`Thanks for play SKYLAB bingo!!!`);
    }
  } else {
    console.log("Thanks for play SKYLAB bingo!!!");
  }
};

const checkLine = () => {
  if (lineAlert === false) {
    if (numbersCard2[0].every((number) => number === "X")) {
      alert("WONDERFUL YOU GOT A LINEEEEEEE!!");
      return (lineAlert = true);
    }
    if (numbersCard2[1].every((number) => number === "X")) {
      alert("WONDERFUL YOU GOT A LINEEEEEEE!!");
      return (lineAlert = true);
    }
    if (numbersCard2[2].every((number) => number === "X")) {
      alert("WONDERFUL YOU GOT A LINEEEEEEE!!");
      return (lineAlert = true);
    }
  }
};

const checkBingo = () => {
  if (
    numbersCard2[0].every((number) => number === "X") &&
    numbersCard2[1].every((number) => number === "X") &&
    numbersCard2[2].every((number) => number === "X")
  ) {
    alert("BINGOOOOOO!!");
    return (bingoAlert = true);
  }
};

const checkNumber = (condition, number) => {
  if (condition === true) {
    alert("There's a coincidence!!!.");
    checkLine();
    checkBingo();
  } else {
    alert(` number generated : ${number}`);
  }
  askForContinue();
};

const numberBombo = () => {
  let numberOfTheBombo;
  do {
    numberOfTheBombo = showRandomNumber();
  } while (bomboPassedNumbers.includes(numberOfTheBombo));
  bomboPassedNumbers.push(numberOfTheBombo);
  counter++;
  console.log(`Current turn: ${counter}`);
  console.log(`These are the passed numbers: ${bomboPassedNumbers}`);

  for (let i = 0; i < numbersCard2.length; i++) {
    for (let j = 0; j < numbersCard2[i].length; j++) {
      if (numberOfTheBombo === numbersCard2[i][j]) {
        numbersCard2[i][j] = "X";
        console.table(numbersCard2);
        return checkNumber(true, numberOfTheBombo);
      }
    }
  }
  return checkNumber(false, numberOfTheBombo);
};

const showPlayersRanking = () => {
  const ranking = [
    { name: "Anacleto", punctuation: 360 },
    { name: "Maria Dolores Angustias", punctuation: 350 },
    { name: "Basilisa", punctuation: 290 },
    { name: "Trosky", punctuation: 255 },
    { name: "Seberino", punctuation: 215 },
    { name: userName, punctuation: 500 - 5 * counter },
  ];
  console.log("This is the hall of fame in Skylab bingo! ");

  ranking.sort(function (a, b) {
    return b.punctuation - a.punctuation;
  });
  console.table(ranking);
};

const playAgain = () => {
  bingoAlert = false;
  lineAlert = false;
  bomboPassedNumbers = [];
  counter = 0;
  let newGame = confirm(`Do you want to play again?`);

  if (newGame === false || newGame === null || newGame === undefined) {
    alert("Thanks for playing Skylab bingo, come back soon. ");
  } else {
    randomNumbersCard();
    askForNewNumbersCard();
    numberBombo();
    showPlayersRanking();
    playAgain();
  }
};

const main = () => {
  SaveUserName();
  randomNumbersCard();
  askForNewNumbersCard();
  numberBombo();
  showPlayersRanking();
  playAgain();
};
main();
